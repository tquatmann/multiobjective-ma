Storm 1.0.0

Command line arguments: --prism models/ma/jobs/jobs10_2.ma --prop models/ma/jobs/jobs4.csl --multiobjective:precision 0.01 -stats -tm 
Current working directory: /home/storm/Desktop

Time for model construction: 0.291s.

-------------------------------------------------------------- 
Model type: 	Markov Automaton (sparse)
States: 	12554
Transitions: 	34581
Choices: 	23061
Markovian St.: 	11531
Max. Rate.: 	5.7
Reward Models:  avg_waiting_time
Labels: 	5
   * deadlock -> 1 state(s)
   * all_jobs_finished -> 1 state(s)
   * half_of_jobs_finished -> 2772 state(s)
   * slowest_before_fastest -> 3073 state(s)
   * init -> 1 state(s)
choice labels: 	no
-------------------------------------------------------------- 

Time for model preprocessing: 0.000s.


Model checking property multi(R[exp]{"avg_waiting_time"}min=? [F "all_jobs_finished"], Pmin=? [F "slowest_before_fastest"], Pmax=? [true U<=(10 / (2 * 2)) "all_jobs_finished"], Pmax=? [true U<=(10 / (4 * 2)) "half_of_jobs_finished"]) ...
Preprocessing done in 0.039s seconds.
 Result: 
---------------------------------------------------------------------------------------------------------------------------------------
                                                       Multi-objective Query                                              
---------------------------------------------------------------------------------------------------------------------------------------

Original Formula: 
--------------------------------------------------------------
	multi(R[exp]{"avg_waiting_time"}min=? [F "all_jobs_finished"], Pmin=? [F "slowest_before_fastest"], Pmax=? [true U<=(10 / (2 * 2)) "all_jobs_finished"], Pmax=? [true U<=(10 / (4 * 2)) "half_of_jobs_finished"])

Objectives:
--------------------------------------------------------------
R[exp]{"avg_waiting_time"}min=? [F "all_jobs_finished"] 	(toOrigVal:0-1*x +000, 	intern threshold:   none, 	intern reward model: objective1 (negative), 	time bounds: none)
Pmin=? [F "slowest_before_fastest"] 	(toOrigVal:0-1*x +000, 	intern threshold:   none, 	intern reward model: objective2 (negative), 	time bounds: none)
Pmax=? [true U<=(10 / (2 * 2)) "all_jobs_finished"] 	(toOrigVal:001*x +000, 	intern threshold:   none, 	intern reward model: objective3 (positive), 	time bounds:<=0000(10 / (2 * 2)))
Pmax=? [true U<=(10 / (4 * 2)) "half_of_jobs_finished"] 	(toOrigVal:001*x +000, 	intern threshold:   none, 	intern reward model: objective4 (positive), 	time bounds:<=0000(10 / (4 * 2)))
--------------------------------------------------------------

Original Model Information:
-------------------------------------------------------------- 
Model type: 	Markov Automaton (sparse)
States: 	12554
Transitions: 	34581
Choices: 	23061
Markovian St.: 	11531
Max. Rate.: 	5.7
Reward Models:  avg_waiting_time
Labels: 	5
   * deadlock -> 1 state(s)
   * all_jobs_finished -> 1 state(s)
   * half_of_jobs_finished -> 2772 state(s)
   * slowest_before_fastest -> 3073 state(s)
   * init -> 1 state(s)
choice labels: 	no
-------------------------------------------------------------- 

Preprocessed Model Information:
-------------------------------------------------------------- 
Model type: 	Markov Automaton (sparse)
States: 	14610
Transitions: 	39974
Choices: 	26662
Markovian St.: 	13332
Max. Rate.: 	5.7
Reward Models:  objective4, objective3, objective1, objective2
Labels: 	5
   * slowest_before_fastest -> 3073 state(s)
   * all_jobs_finished -> 2 state(s)
   * deadlock -> 2 state(s)
   * half_of_jobs_finished -> 3388 state(s)
   * init -> 1 state(s)
choice labels: 	no
-------------------------------------------------------------- 

---------------------------------------------------------------------------------------------------------------------------------------

Solving multi-objective query took 846.844s seconds (consisting of 0.039s seconds for preprocessing and 846.804s seconds for value iteration-based exploration of achievable points).
Result (initial states): 
Underapproximation of achievable values: Polytope with 70 Halfspaces:
   (         0, -0.00267756,          0,          1) * x <= 0.709132
   (-0.0320059, -0.00106656,          1,  0.0335286) * x <= 0.27952
   ( -0.031219, -0.00126768,          1,  0.0346658) * x <= 0.281326
   ( -0.191771,          0,          1,          0) * x <= 0.0281984
   ( -0.254706,  -0.202239,          1,          0) * x <= -0.061712
   (-0.0291336,          0,          1,  0.0316177) * x <= 0.283424
   (-0.0156477, -0.00438517,          1,  0.0225243) * x <= 0.29944
   (-0.00826187, -0.0112995,          1,  0.0360111) * x <= 0.316631
   (-0.0767234, -0.0249996,          1,  0.0250252) * x <= 0.206769
   (-0.0778779, -0.0315466,          1,  0.0239586) * x <= 0.204338
   ( -0.127671, -0.0256448,          1,          0) * x <= 0.117698
   (-1.75131e-16,         -1,          0,          0) * x <= -0.000117673
   ( -0.303059,          0,          1,   0.361937) * x <= 0.129082
   (         0, -0.0077219,          1,          0) * x <= 0.318355
   ( -0.362166,          0,          1,          0) * x <= -0.208344
   (        -1,          0,   0.975989,          0) * x <= -1.08678
   (-0.0161681, -0.000831123,          1,          0) * x <= 0.293928
   (         0,         -1, 3.5979e-14, 1.48805e-15) * x <= -0.000117673
   (         0, -0.00220658,          1,  0.0360392) * x <= 0.332143
   (-0.0366686,          0,          1,  0.0305899) * x <= 0.271107
   (  -0.01717,          0,          1,          0) * x <= 0.292911
   (         0,          0,   0.452996,          1) * x <= 0.843536
   (         0,          0,          1,   0.129826) * x <= 0.39052
   (-0.0176934, -0.00450637,          1,   0.018789) * x <= 0.294679
   ( -0.147998,  -0.378407,          1,          0) * x <= 0.0860837
   (         0,         -1, 1.52836e-15, 1.98165e-16) * x <= -0.000117673
   (-0.0980335,          0,          1,          0) * x <= 0.163643
   (-0.00970289,          0,          1,  0.0345835) * x <= 0.316278
   (-0.0549938,          0,          1,   0.061291) * x <= 0.263129
   (         0,          0,          0,          1) * x <= 0.709156
   (-0.0523294,          0,          1,   0.066243) * x <= 0.270371
   (         0, -0.00259066,          1,  0.0573722) * x <= 0.343024
   (-1.77982e-16,         -1,          0, 1.18611e-18) * x <= -0.000117673
   (         0,          0,          1,          0) * x <= 0.323998
   (         0, -0.0120406,          1,  0.0413576) * x <= 0.332525
   (         0, -0.0050798,          1,  0.0316629) * x <= 0.329204
   (-1.14228e-17,         -1,          0, 1.09693e-16) * x <= -0.000117673
   (-0.0162879, -0.00416082,          1,  0.0224489) * x <= 0.298423
   (         0,          0,          1,  0.0486514) * x <= 0.339158
   (-6.8155e-16,         -1, 2.53729e-15,          0) * x <= -0.000117673
   ( -0.181097,  -0.511581,          1,          0) * x <= 0.0385573
   ( -0.051535, -0.00262956,          1,          0) * x <= 0.234502
   (         0,         -1, 6.85725e-15,          0) * x <= -0.000117673
   (-0.0390066,          0,          1,  0.0453618) * x <= 0.27666
   (-0.0379576,         -1,   0.143756,          0) * x <= -0.0116815
   (-0.000637131,          0,          0,          1) * x <= 0.708264
   (        -1,          0,          0,          0) * x <= -1.3583
   (         0,         -1,          0, 1.13946e-16) * x <= -0.000117673
   (-1.804e-16,         -1, 3.02026e-18,          0) * x <= -0.000117673
   (         0,          0,          1,  0.0429596) * x <= 0.33623
   (         0,  -0.814075,          0,          1) * x <= 0.708316
   (-0.0236832, -0.0055164,          1,          0) * x <= 0.278047
   (-0.0279829, -0.00585878,          1,          0) * x <= 0.270729
   (-0.0320303, -0.000207161,          1,  0.0306214) * x <= 0.278192
   ( -0.088667,  -0.141862,          1,  0.0220907) * x <= 0.186922
   (         0,         -1,          0, 7.1489e-15) * x <= -0.000117673
   (-0.0090402, -0.00102059,          1,  0.0319547) * x <= 0.31575
   ( -0.183194,          0,          1,          0) * x <= 0.0402052
   (-0.0890071,          0,          0,          1) * x <= 0.587514
   (         0,          0,          1,   0.102574) * x <= 0.372655
   (-0.0338268,          0,          1,  0.0301793) * x <= 0.275257
   (-0.0313107, -0.00153252,          1,  0.0341436) * x <= 0.280846
   (         0,         -1,          0,          0) * x <= -0.000117673
   (-0.0174683, -0.00393771,          1,  0.0228655) * x <= 0.296788
   (-0.0679875,          0,          1,          0) * x <= 0.209479
   (-0.0111665, -0.0102265,          1,  0.0355082) * x <= 0.311946
   (         0, -0.0843903,  0.0642069,          1) * x <= 0.727447
   (         0,  -0.871668, 0.00614576,          1) * x <= 0.710019
   (         0, -0.00314178,          1,          0) * x <= 0.320984
   ( -0.126097, -0.0357366,          1,          0) * x <= 0.119812

Overapproximation of achievable values: Polytope with 18 Halfspaces:
   (        -1,          0,          0,          0) * x <= -1.3583
   (         0,         -1,          0,          0) * x <= -0.000117673
   (         0,          0,          1,          0) * x <= 0.328498
   (         0,          0,          0,          1) * x <= 0.713512
   ( -0.858104,          0,   0.141896,          0) * x <= -1.12218
   ( -0.211973,          0,   0.788027,          0) * x <= -0.0585819
   (         0,  -0.324289,   0.675711,          0) * x <= 0.218451
   (         0,          0,   0.934323,  0.0656773) * x <= 0.333659
   (-0.0707691, -0.0034163,   0.925815,          0) * x <= 0.186081
   (  -0.12031,          0,    0.87969,          0) * x <= 0.0985648
   (         0,  -0.288776,   0.657914,  0.0533098) * x <= 0.239091
   (         0,  -0.201049,   0.613953,   0.184998) * x <= 0.317337
   (-0.0365178,          0,   0.963482,          0) * x <= 0.253758
   (         0, -0.00335787,    0.95706,  0.0395817) * x <= 0.324511
   ( -0.351519,          0,   0.648481,          0) * x <= -0.291197
   (-0.0499683,  -0.168173,   0.781859,          0) * x <= 0.172052
   (-0.0662987,          0,   0.416344,   0.517357) * x <= 0.40059
   (         0, -0.00584635,   0.994154,          0) * x <= 0.322018

16 pareto optimal points found (Note that these points are safe, i.e., contained in the underapproximation, but there is no guarantee for optimality):
   (1.43540731, 0.0001176734799, 0.2985658513, 0.7082871034 )
   (1.358303191, 0.0001176734799, 0.2782071848, 0.7084122228 )
   (1.358303191, 0.0001176734799, 0000000000, 0000000000 )
   (1.549849291, 0.5989715679, 0.30893542, 0.6212096176 )
   (1.641803475, 0.7561325001, 0.3211010239, 0.3211669361 )
   (1.755434138, 0.5738691504, 0.3227867285, 0.2947396307 )
   (1.612313171, 0.2393354264, 0.3141330918, 0.5143745765 )
   (1.810554529, 0.9595554804, 0.3239984715, 0.2847312019 )
   (1.49950763, 0.0001176734799, 0.3054148295, 0.6555322146 )
   (1.70200365, 0.0001176734799, 0.3183562757, 0.3426161726 )
   (1.366423505, 0.001005509961, 0.2865272709, 0.7091349882 )
   (1.449482243, 0.1164335957, 0.3057410371, 0.605324227 )
   (1.525517222, 0.02856077271, 0.3131950138, 0.4527939775 )
   (1.399841226, 0.008957319361, 0.2966471209, 0.7091562797 )
   (1.388204147, 0.01257867246, 0.2944154683, 0.7055781077 )
   (1.538146583, 0.0001176734799, 0.3137710756, 0.432350586 )


Time for model checking: 846.845s.

Performance statistics:
  * peak memory usage: 215MB
  * CPU time: 846.216s
  * wallclock time: 847.146s

real	14m7.164s
user	14m6.220s
sys	0m0.584s
