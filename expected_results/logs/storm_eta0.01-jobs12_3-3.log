Storm 1.0.0

Command line arguments: --prism models/ma/jobs/jobs12_3.ma --prop models/ma/jobs/jobs3.csl --multiobjective:precision 0.01 -stats -tm 
Current working directory: /home/storm/Desktop

Time for model construction: 11.718s.

-------------------------------------------------------------- 
Model type: 	Markov Automaton (sparse)
States: 	116814
Transitions: 	450783
Choices: 	225437
Markovian St.: 	112719
Max. Rate.: 	8.5
Reward Models:  avg_waiting_time
Labels: 	5
   * deadlock -> 1 state(s)
   * all_jobs_finished -> 1 state(s)
   * half_of_jobs_finished -> 19404 state(s)
   * slowest_before_fastest -> 27915 state(s)
   * init -> 1 state(s)
choice labels: 	no
-------------------------------------------------------------- 

Time for model preprocessing: 0.000s.


Model checking property multi(T[exp]min=? [F "all_jobs_finished"], T[exp]min=? [F "half_of_jobs_finished"], R[exp]{"avg_waiting_time"}min=? [F "all_jobs_finished"], Pmin=? [F "slowest_before_fastest"]) ...
Preprocessing done in 0.559s seconds.
 Result: 
---------------------------------------------------------------------------------------------------------------------------------------
                                                       Multi-objective Query                                              
---------------------------------------------------------------------------------------------------------------------------------------

Original Formula: 
--------------------------------------------------------------
	multi(T[exp]min=? [F "all_jobs_finished"], T[exp]min=? [F "half_of_jobs_finished"], R[exp]{"avg_waiting_time"}min=? [F "all_jobs_finished"], Pmin=? [F "slowest_before_fastest"])

Objectives:
--------------------------------------------------------------
T[exp]min=? [F "all_jobs_finished"] 	(toOrigVal:0-1*x +000, 	intern threshold:   none, 	intern reward model: objective1 (negative), 	time bounds: none)
T[exp]min=? [F "half_of_jobs_finished"] 	(toOrigVal:0-1*x +000, 	intern threshold:   none, 	intern reward model: objective2 (negative), 	time bounds: none)
R[exp]{"avg_waiting_time"}min=? [F "all_jobs_finished"] 	(toOrigVal:0-1*x +000, 	intern threshold:   none, 	intern reward model: objective3 (negative), 	time bounds: none)
Pmin=? [F "slowest_before_fastest"] 	(toOrigVal:0-1*x +000, 	intern threshold:   none, 	intern reward model: objective4 (negative), 	time bounds: none)
--------------------------------------------------------------

Original Model Information:
-------------------------------------------------------------- 
Model type: 	Markov Automaton (sparse)
States: 	116814
Transitions: 	450783
Choices: 	225437
Markovian St.: 	112719
Max. Rate.: 	8.5
Reward Models:  avg_waiting_time
Labels: 	5
   * deadlock -> 1 state(s)
   * all_jobs_finished -> 1 state(s)
   * half_of_jobs_finished -> 19404 state(s)
   * slowest_before_fastest -> 27915 state(s)
   * init -> 1 state(s)
choice labels: 	no
-------------------------------------------------------------- 

Preprocessed Model Information:
-------------------------------------------------------------- 
Model type: 	Markov Automaton (sparse)
States: 	133253
Transitions: 	512379
Choices: 	256268
Markovian St.: 	128135
Max. Rate.: 	8.5
Reward Models:  objective4, objective3, objective1, objective2
Labels: 	5
   * slowest_before_fastest -> 27915 state(s)
   * all_jobs_finished -> 2 state(s)
   * deadlock -> 2 state(s)
   * half_of_jobs_finished -> 23814 state(s)
   * init -> 1 state(s)
choice labels: 	no
-------------------------------------------------------------- 

---------------------------------------------------------------------------------------------------------------------------------------

Solving multi-objective query took 464.703s seconds (consisting of 0.559s seconds for preprocessing and 464.139s seconds for value iteration-based exploration of achievable points).
Result (initial states): 
Underapproximation of achievable values: Polytope with 86 Halfspaces:
   (         0,         -1,          0,          0) * x <= -0.837508
   (        -1,   -0.28986,  -0.161894, -0.0543943) * x <= -3.35328
   (        -1,  -0.296602,  -0.150742,  -0.046548) * x <= -3.34618
   (        -1,  -0.283494,  -0.165912, -0.0429708) * x <= -3.35096
   (        -1,          0,  -0.832881, -0.0446873) * x <= -3.86703
   (        -1,  -0.320264,  -0.109211, -0.0424745) * x <= -3.31851
   (         0,          0, -0.00240321,         -1) * x <= -0.00397237
   (         0, -0.00124383,          0,         -1) * x <= -0.00226121
   (        -1,  -0.216513,     -0.358,          0) * x <= -3.51168
   (        -1,          0,  -0.480735,  -0.162287) * x <= -3.42132
   (        -1,  -0.255915,  -0.174212, -0.0314728) * x <= -3.32948
   (        -1,  -0.265394,  -0.200796, -0.0350277) * x <= -3.37414
   (        -1,  -0.229288,  -0.165406,   -0.09053) * x <= -3.28759
   (        -1,  -0.272374,  -0.170374, -0.0336792) * x <= -3.3437
   (        -1,  -0.344959,          0,  -0.683523) * x <= -3.2135
   (        -1,    -0.3428,          0,  -0.685333) * x <= -3.211
   (         0, -0.00104256,          0,         -1) * x <= -0.00208417
   (-0.0031054,          0,          0,         -1) * x <= -0.0102015
   (-0.0106257,          0,          0,         -1) * x <= -0.0320799
   (-0.00154611,          0, -0.00886373,         -1) * x <= -0.0160118
   (        -1,  -0.378922,          0, -0.0936617) * x <= -3.24269
   (-0.0871949,         -1,          0,          0) * x <= -1.0926
   (        -1,          0,  -0.424547, -0.000520368) * x <= -3.33266
   (         0,          0, -0.0040987,         -1) * x <= -0.00595154
   (        -1,          0,  -0.322826, -0.00274363) * x <= -3.18894
   (  -0.76055,          0,         -1,          0) * x <= -3.37994
   (         0,         -1, -2.12772e-14,          0) * x <= -0.837508
   (        -1,  -0.214449,  -0.531045,          0) * x <= -3.71779
   (        -1,  -0.359023, -0.0216513,          0) * x <= -3.24344
   (-1.0405e-14,         -1,          0, -8.05701e-14) * x <= -0.837508
   (        -1,          0,  -0.427835,          0) * x <= -3.33689
   (  -0.56368,          0,         -1,          0) * x <= -2.8072
   (        -1,          0,  -0.602418, -0.0264049) * x <= -3.57512
   (        -1,          0,  -0.341419, -0.0460625) * x <= -3.22615
   (        -1,          0,  -0.592242, -0.00972502) * x <= -3.56029
   (        -1,  -0.385275,          0,  -0.101829) * x <= -3.24828
   (        -1,  -0.147482,  -0.252112,          0) * x <= -3.29098
   (        -1,          0,  -0.322868,          0) * x <= -3.18647
   (        -1,  -0.339416,          0,          0) * x <= -3.18976
   (        -1,          0,          0, -0.0263566) * x <= -2.73698
   (-0.0305329,          0,          0,         -1) * x <= -0.0880617
   (        -1,   -0.28631,          0,  -0.032438) * x <= -3.13261
   (        -1,  -0.288768,          0, -0.0335451) * x <= -3.1359
   (        -1,  -0.286258,          0, -0.00929157) * x <= -3.12675
   (        -1,  -0.403513,          0,          0) * x <= -3.26013
   (        -1,  -0.370831,          0,          0) * x <= -3.22837
   (        -1,  -0.218629,  -0.113593, -0.000958428) * x <= -3.19268
   (        -1,  -0.385383,          0, -0.0111747) * x <= -3.24532
   (         0,          0,         -1,          0) * x <= -1.12084
   (         0,          0,          0,         -1) * x <= -0.000963043
   (        -1,   -0.25047,          0, -0.00677823) * x <= -3.07686
   (        -1,          0,          0,          0) * x <= -2.71265
   (        -1,          0,  -0.882396,          0) * x <= -3.9238
   ( -0.296227,          0,         -1,   -0.77935) * x <= -2.02612
   (        -1,  -0.231662,  -0.154582, -0.000580624) * x <= -3.26866
   (        -1,  -0.219654,  -0.112626,          0) * x <= -3.19185
   (        -1,  -0.222416,  -0.152404,          0) * x <= -3.2527
   (         0,         -1,          0, -9.65213e-12) * x <= -0.837508
   ( -0.445638,          0,         -1,          0) * x <= -2.46227
   (        -1,   -0.36719,          0, -0.0144116) * x <= -3.2275
   (        -1,  -0.375655,          0, -0.0240141) * x <= -3.2376
   (        -1,  -0.261125,  -0.174388,          0) * x <= -3.33179
   (         0, -0.000484495, -0.00365926,         -1) * x <= -0.00586476
   (        -1,  -0.370847,          0, -0.00518257) * x <= -3.22969
   (        -1,  -0.272969,  -0.145924, -0.0161537) * x <= -3.3115
   (        -1,  -0.247524,  -0.185367,          0) * x <= -3.33008
   (        -1,  -0.266661,  -0.056352,  -0.030734) * x <= -3.18502
   (        -1,  -0.361247, -0.0859944,          0) * x <= -3.32448
   (        -1,   -0.26635, -0.0565207, -0.0306154) * x <= -3.18484
   (        -1,          0,  -0.431954, -0.00781953) * x <= -3.34499
   (        -1,  -0.277234,   -0.26445, -0.0215871) * x <= -3.46185
   ( -0.162198,          0,         -1,          0) * x <= -1.61595
   (        -1,  -0.228975,   -0.16222, -0.00502163) * x <= -3.27691
   (        -1,  -0.264444,  -0.151284, -0.0174533) * x <= -3.30868
   (        -1,  -0.226062,   -0.16052,          0) * x <= -3.26923
   (        -1,  -0.239837,   -0.18535, -0.00531598) * x <= -3.32194
   ( -0.538746,          0,         -1, -0.0098107) * x <= -2.73467
   (        -1,          0,          0, -0.0749915) * x <= -2.74913
   (        -1,  -0.256473,  -0.362352,          0) * x <= -3.5573
   (         0,         -1,          0, -2.00674e-14) * x <= -0.837508
   (-2.48164e-14,         -1,          0,          0) * x <= -0.837508
   (        -1,  -0.255544,          0,          0) * x <= -3.07785
   (        -1,          0,  -0.977643,  -0.196102) * x <= -4.0507
   (        -1,          0,  -0.616782,          0) * x <= -3.58995
   ( -0.435627,          0,         -1,          0) * x <= -2.43299
   (        -1,  -0.233542,  -0.156716,          0) * x <= -3.27375

Overapproximation of achievable values: Polytope with 21 Halfspaces:
   (        -1,          0,          0,          0) * x <= -2.71265
   (         0,         -1,          0,          0) * x <= -0.837508
   (         0,          0,         -1,          0) * x <= -1.12084
   (         0,          0,          0,         -1) * x <= -0.000963043
   ( -0.707451,  -0.148107,          0,  -0.144442) * x <= -2.14371
   ( -0.646244,  -0.353756,          0,          0) * x <= -2.18475
   ( -0.578125,          0,  -0.421875,          0) * x <= -2.15751
   ( -0.745284,  -0.249589,          0, -0.00512682) * x <= -2.37441
   ( -0.769447,  -0.230553,          0,          0) * x <= -2.41351
   ( -0.212454,          0,  -0.322126,   -0.46542) * x <= -0.994646
   ( -0.231346,          0,  -0.768654,          0) * x <= -1.56085
   ( -0.962121,          0,          0, -0.0378792) * x <= -2.63643
   ( -0.509951,          0,  -0.353666,  -0.136384) * x <= -1.88225
   ( -0.656861,          0,  -0.343139,          0) * x <= -2.27506
   ( -0.691923,  -0.215599, -0.0924774,          0) * x <= -2.30603
   ( -0.148063,  -0.398233,          0,  -0.453703) * x <= -0.767235
   ( -0.486566,          0,  -0.513434,          0) * x <= -2.01036
   ( -0.717438,  -0.282562,          0,          0) * x <= -2.3322
   ( -0.710017,   -0.24718,          0, -0.0428025) * x <= -2.27631
   (  -0.65684,          0,  -0.316952, -0.0262088) * x <= -2.24321
   ( -0.735112,          0,  -0.264888,          0) * x <= -2.38189

20 pareto optimal points found (Note that these points are safe, i.e., contained in the underapproximation, but there is no guarantee for optimality):
   (2.763900947, 1.284386954, 1.339284707, 0.3302090931 )
   (2.730386174, 01.3765174, 1.418325459, 0000000.25 )
   (3.05246092, 0.8375076792, 1.120843781, 0.001357528982 )
   (2.748824172, 1.339974643, 1.397492667, 0.004132209367 )
   (2.764598933, 1.284851038, 1.342375691, 0.07019977802 )
   (2.796746415, 1.172406692, 1.332449928, 0.01802340618 )
   (2.736894396, 1.334243279, 1.437315881, 0.851952163 )
   (2.712648718, 1.429121963, 1.46755022, 0.9229788531 )
   (2.909256087, 0.8796527501, 1.167309548, 0.001167079536 )
   (2.772586834, 1.229084925, 1.366272798, 0.2503296364 )
   (2.812139457, 1.159139289, 1.266440078, 0.002199011279 )
   (2.862174004, 1.010529148, 1.203117822, 0.06273885162 )
   (2.988120738, 0.8375076792, 1.131279599, 0.01242245635 )
   (2.854962214, 1.008180246, 1.224683094, 0.1628009317 )
   (2.868001517, 0.9717854946, 1.225941114, 0.2510908512 )
   (2.925488187, 0.8375076792, 1.158564048, 0.001219500666 )
   (2.814708599, 1.140812915, 1.256909347, 0.1223410902 )
   (2.723796416, 1.396074339, 1.433023083, 0.9224583704 )
   (2.922063896, 0.8378062599, 1.160090043, 0.03371765125 )
   (2.974960003, 01.0753603, 1.252211228, 0.000963042854 )


Time for model checking: 464.706s.

Performance statistics:
  * peak memory usage: 238MB
  * CPU time: 475.408s
  * wallclock time: 476.467s

real	7m56.487s
user	7m55.408s
sys	0m0.992s
